# Generated by Django 3.0.5 on 2020-04-28 16:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, verbose_name='Url')),
                ('description', models.CharField(max_length=200, verbose_name='Description')),
                ('template', models.CharField(default='blog_t/category_list.html', max_length=500, verbose_name='Template')),
                ('to_display', models.BooleanField(default=True, verbose_name='To display?')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='Sort')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('greeting', models.CharField(max_length=100, verbose_name='Greeting')),
                ('about_pr', models.TextField(max_length=1000, verbose_name='About project')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('slug', models.SlugField(max_length=100, verbose_name='Url')),
                ('description', models.TextField(max_length=400, verbose_name='Description')),
                ('text', models.TextField(verbose_name='Text')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created_date')),
                ('edit_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Edit date')),
                ('template', models.CharField(default='blog_t/post_detail.html', max_length=500, verbose_name='template')),
                ('to_display', models.BooleanField(default=True, verbose_name='To display?')),
                ('for_auth', models.BooleanField(default=False, verbose_name='For authorized?')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='Sort')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['sort', '-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='A comment')),
                ('slug', models.SlugField(max_length=100, verbose_name='Url')),
                ('created_date', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('moderation', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post', verbose_name='Article')),
            ],
            options={
                'verbose_name': 'Comment',
            },
        ),
    ]
